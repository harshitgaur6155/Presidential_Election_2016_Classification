geom_bar(position = "dodge", stat = "identity") +
labs(title = "Total Democrat Votes by State & Year") +
scale_x_discrete(name ="States") +
scale_y_continuous(name = "Total Democrat Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Plot of outcome variable 'Total Democratic Votes' by state and year
totalDVotesL <- ElectionData %>%
select(state, vd2008, vd2012, vd2016) %>% group_by(state) %>% summarise('2008' = sum(vd2008, na.rm = TRUE),
'2012' = sum(vd2012, na.rm = TRUE),
'2016' = sum(vd2016, na.rm = TRUE)) %>%
gather(year, tdVotes, c('2008', '2012', '2016'))
ggplot(data = totalDVotesL, mapping = aes(x = reorder(factor(state), tdVotes, function(x) -1*sum(x)), y = tdVotes, fill = year)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Total Democrat Votes by State & Year") +
scale_x_discrete(name ="States") +
scale_y_continuous(name = "Total Democrat Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Plot of outcome variable 'Total Republican Votes' by state and year
totalRVotesL <- ElectionData %>%
select(state, vg2008, vg2012, vg2016) %>% group_by(state) %>% summarise('2008' = sum(vg2008, na.rm = TRUE),
'2012' = sum(vg2012, na.rm = TRUE),
'2016' = sum(vg2016, na.rm = TRUE)) %>%
gather(year, tgVotes, c('2008', '2012', '2016'))
ggplot(data = totalRVotesL, mapping = aes(x = reorder(factor(state), tgVotes, function(x) -1*sum(x)), y = tgVotes, fill = year)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Total Republican Votes by State & Year") +
scale_x_discrete(name ="States") +
scale_y_continuous(name = "Total Republican Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Declaring the names of packages to be imported
packageList <- c("tidyverse", "vtable", "RColorBrewer", "corrplot", "car", "psych", "stargazer", "scales")
for (package in packageList) {
if (!package %in% rownames(installed.packages()))
{ install.packages(package) }
# Import the package
library(package, character.only = TRUE)
}
# Import/Load the data set
#location <- "~/Documents/Northeastern University/MPS Analytics/ALY 6015/"
location <- "C:/Users/rajak/OneDrive/Desktop/Study/University/ALY6015 - Intermediate Analytics/"
ElectionData <- read.csv(paste0(location, "Final Project/Presidential_Election_2016_Classification/Data/2016Election.csv"))
# Get a Glimpse/View of the data set
glimpse(ElectionData)
# ------------------------ Descriptive Statistics ------------------------ #
# Descriptive Statistics of 'Total Votes' in 2008, 2012, 2016
totalVotesStats <- ElectionData %>%
select(v2008, v2012, v2016)
# Kable Classic Method
vars <- c(1,3,4,5,6,9,10,11,15,16,17)
totalVotesStats <-  totalVotesStats %>%
describe(quant = c(.25, .75), IQR = TRUE) %>%
mutate(year = c(2008, 2012, 2016)) %>%
relocate(year)
round(totalVotesStats[vars], 2) %>%
kbl(caption = "Table 1: Descriptive Statistics for Total Votes") %>%
kable_classic(html_font = "Cambria")
# Descriptive Statistics of 'Total Democratic Votes' in 2008, 2012, 2016
totalDemocraticVotesStats <- ElectionData %>%
select(vd2008, vd2012, vd2016) %>%
describe(quant = c(.25, .75), IQR = TRUE) %>%
mutate(year = c(2008, 2012, 2016)) %>%
relocate(year)
# Kable Classic Method
round(totalDemocraticVotesStats[vars], 2) %>%
kbl(caption = "Table 2: Descriptive Statistics for Total Democratic Votes") %>%
kable_classic(html_font = "Cambria")
# Descriptive Statistics of 'Total Republican Votes' in 2008, 2012, 2016
totalRepublicanVotes <- ElectionData %>%
select(vg2008, vg2012, vg2016) %>%
describe(quant = c(.25, .75), IQR = TRUE) %>%
mutate(year = c(2008, 2012, 2016)) %>%
relocate(year)
# Kable Classic Method
round(totalRepublicanVotes[vars], 2) %>%
kbl(caption = "Table 3: Descriptive Statistics for Total Republican Votes") %>%
kable_classic(html_font = "Cambria")
# Descriptive Statistics of 'Total Unemployment Rate' in 2011, 2012, 2013, 2014, 2015
unemploymentRate <- ElectionData %>%
select(unemp11, unemp12, unemp13, unemp14, unemp15) %>%
describe(quant = c(.25, .75), IQR = TRUE) %>%
mutate(year = c(2011, 2012, 2013, 2014, 2015)) %>%
relocate(year)
# Kable Classic Method
round(unemploymentRate[vars], 2) %>%
kbl(caption = "Table 4: Descriptive Statistics for Total Unemployment Rate") %>%
kable_classic(html_font = "Cambria")
# ------------------------ Exploratory Data Analysis ------------------------ #
# Plot of outcome variable 'Total Votes' by state and year
totalVotesL <- ElectionData %>%
select(state, v2008, v2012, v2016) %>% group_by(state) %>% summarise('2008' = sum(v2008, na.rm = TRUE),
'2012' = sum(v2012, na.rm = TRUE),
'2016' = sum(v2016, na.rm = TRUE)) %>%
gather(year, tVotes, c('2008', '2012', '2016'))
ggplot(data = totalVotesL, mapping = aes(x = reorder(factor(state), tVotes, function(x) -1*sum(x)), y = tVotes, fill = year)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Total Votes by State & Year") +
scale_x_discrete(name ="States") +
scale_y_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Plot of outcome variable 'Total Democratic Votes' by state and year
totalDVotesL <- ElectionData %>%
select(state, vd2008, vd2012, vd2016) %>% group_by(state) %>% summarise('2008' = sum(vd2008, na.rm = TRUE),
'2012' = sum(vd2012, na.rm = TRUE),
'2016' = sum(vd2016, na.rm = TRUE)) %>%
gather(year, tdVotes, c('2008', '2012', '2016'))
ggplot(data = totalDVotesL, mapping = aes(x = reorder(factor(state), tdVotes, function(x) -1*sum(x)), y = tdVotes, fill = year)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Total Democrat Votes by State & Year") +
scale_x_discrete(name ="States") +
scale_y_continuous(name = "Total Democrat Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Plot of outcome variable 'Total Republican Votes' by state and year
totalRVotesL <- ElectionData %>%
select(state, vg2008, vg2012, vg2016) %>% group_by(state) %>% summarise('2008' = sum(vg2008, na.rm = TRUE),
'2012' = sum(vg2012, na.rm = TRUE),
'2016' = sum(vg2016, na.rm = TRUE)) %>%
gather(year, tgVotes, c('2008', '2012', '2016'))
ggplot(data = totalRVotesL, mapping = aes(x = reorder(factor(state), tgVotes, function(x) -1*sum(x)), y = tgVotes, fill = year)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Total Republican Votes by State & Year") +
scale_x_discrete(name ="States") +
scale_y_continuous(name = "Total Republican Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# ------------------------ Subgroup Analysis ------------------------ #
# ------------------------ Subgroup Analysis ------------------------ #
View(ElectionData)
View(totalVotesL)
View(totalVotesL)
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
totalVotesbyState <- totalVotesL %>% filter(year == 2016) %>% select(state, tVotes)
View(totalVotesbyState)
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
totalVotesbyState <- ElectionData %>% select(state, v2008, v2012, v2016)
View(totalVotesbyState)
ggplot(data = totalVotesbyState) +
geom_boxplot(v2008)
?geom_boxplot
View(totalVotesbyState)
ggplot(data = totalVotesbyState) +
geom_boxplot(mapping = aes(v2008))
ggplot(data = totalVotesbyState) +
geom_boxplot(mapping = aes(v2008, group = state))
ggplot(data = totalVotesbyState) +
geom_boxplot(mapping = aes(v2008, fill = state))
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
totalVotesbyState <- ElectionData %>% select(state, v2008, v2012, v2016) %>% gather(year, tVotes, c('2008', '2012', '2016'))
View(totalRVotesL)
View(totalVotesL)
View(totalVotesL)
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year))
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE)
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
?scale_y_discrete
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme(axis.ticks = element_blank(), axis.text = element_blank())
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme(axis.ticks = element_blank(), axis.text = element_blank()) +
theme_bw()
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme(axis.ticks.y = element_blank(), axis.text.y = element_blank()) +
theme_bw()
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme(axis.ticks.y = element_blank()) +
theme_bw()
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
theme(axis.ticks.y = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by state
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Boxplot of total democrat votes by year
ggplot(data = totalDVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Boxplot of total democrat votes by year
ggplot(data = totalDVotesL) +
geom_boxplot(mapping = aes(tDVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
View(totalDVotesL)
# Boxplot of total democrat votes by year
ggplot(data = totalDVotesL) +
geom_boxplot(mapping = aes(tdVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Boxplot of total republican votes by year
ggplot(data = totalRVotesL) +
geom_boxplot(mapping = aes(trVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
View(totalRVotesL)
# Boxplot of total republican votes by year
ggplot(data = totalRVotesL) +
geom_boxplot(mapping = aes(tgVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# ------------------------ Subgroup Analysis ------------------------ #
# Boxplot of total votes by year
ggplot(data = totalVotesL) +
geom_boxplot(mapping = aes(tVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Boxplot of total democrat votes by year
ggplot(data = totalDVotesL) +
geom_boxplot(mapping = aes(tdVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Democrat Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Boxplot of total republican votes by year
ggplot(data = totalRVotesL) +
geom_boxplot(mapping = aes(tgVotes, fill = year), notch = TRUE) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
labs(title = "Boxplot of Total Republican Votes by Year") +
scale_x_continuous(name = "Total Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
View(ElectionData)
# Declaring the names of packages to be imported
packageList <- c("tidyverse", "vtable", "RColorBrewer", "corrplot", "car", "psych", "stargazer", "scales", "glmnet", "Metrics", "caret", "leaps", "MASS")
for (package in packageList) {
if (!package %in% rownames(installed.packages()))
{ install.packages(package) }
# Import the package
library(package, character.only = TRUE)
}
# Import/Load the data set
location_harshit <- "~/Documents/Northeastern University/MPS Analytics/ALY 6015/Final Project/Presidential_Election_2016_Classification/"
location_akash <- "C:/Users/rajak/OneDrive/Desktop/Study/University/ALY6015 - Intermediate Analytics/Final Project/Presidential_Election_2016_Classification/"
location <- ifelse(!dir.exists(paths = location_harshit), location_akash, location_harshit)
ElectionData <- read.csv(paste0(location, "Data/2016Election.csv"))
# ------------------------------------- Merging External Data sets ----------------------------------- #
# Reading new external data set
population <- read.csv(paste0(location, "Data/USPopulationByCounty.csv"))
election2020 <- read.csv(paste0(location, "Data/2020ElectionResults.csv"))
region <- read.csv(paste0(location, "Data/Regions.csv"))
# Combining the external data sets with the original election data sets
ElectionData <- ElectionData %>% inner_join(population, by = c("county", "state"))
election2020$county_fips <- as.factor(election2020$county_fips)
ElectionData$c_fips <- as.factor(ElectionData$c_fips)
ElectionData <- ElectionData %>% inner_join(election2020, by = c("c_fips" = "county_fips"))
ElectionData <- ElectionData %>% inner_join(region, by = c("state" = "state.code"))
################################################################
# Checking the records with missing/NA values
################################################################
# Since, libertarian feature has almost all the data points as NA. We're removing it for now to check other NA cases
ElectionData <- ElectionData %>% select(-libertarian)
ElectionData %>%
filter(!complete.cases(ElectionData)) %>%
View()
# Retrieving the names of features with missing values.
missingValuesCols <- names(which(colSums(is.na(ElectionData)) > 0))
# Imputing missing values with their respective features' mean value
for(i in 1:ncol(ElectionData)) {
ifelse(is.numeric(ElectionData[,i]),
ElectionData[is.na(ElectionData[,i]), i] <- mean(ElectionData[,i], na.rm = TRUE),
ifelse(is.character(ElectionData[,i]), "NULL", 0)
)
}
# Factorize these 'Quality Assessment Texts' in the data set
ElectionData[sapply(ElectionData, is.character)] <- lapply(ElectionData[sapply(ElectionData, is.character)], as.factor)
names(ElectionData)
ElectionDataEDA <- ElectionData %>% select(v2016, pd2016, pg2016, ppd2016, v2012, pd2012, pg2012, ppd2012, v2008, pd2008,
pg2008, ppd2012, population.2016, geograhic.region)
ElectionDataEDA <- ElectionData %>%
select(v2016, pd2016, pg2016, ppd2016, v2012, pd2012, pg2012, ppd2012, v2008, pd2008, pg2008, ppd2012, population.2016, geograhic.region)
################################################################
# Correlation
################################################################
# numIntFeatures_ElectionData <- ElectionData[sapply(ElectionData, is.numeric)]
corrFeatures_ElectionData <- ElectionData %>%
select(v2016, pd2016, pg2016, ppd2016, v2012, pd2012, pg2012, ppd2012, v2008, pd2008, pg2008, ppd2012, population.2016)
?select
ElectionDataEDA <- ElectionData %>%
dplyr::select(v2016, pd2016, pg2016, ppd2016, v2012, pd2012, pg2012, ppd2012, v2008, pd2008, pg2008, ppd2012, population.2016, geograhic.region)
View(ElectionDataEDA)
percDemocraticVotesStats <- ElectionDataEDA %>%
select(pd2008, pd2012, pd2016) %>%
describe(quant = c(.25, .75), IQR = TRUE) %>%
mutate(year = c(2008, 2012, 2016)) %>%
relocate(year)
percDemocraticVotesStats <- ElectionDataEDA %>%
dplyr::select(pd2008, pd2012, pd2016) %>%
describe(quant = c(.25, .75), IQR = TRUE) %>%
mutate(year = c(2008, 2012, 2016)) %>%
relocate(year)
View(percDemocraticVotesStats)
percRepublicanVotesStats <- ElectionDataEDA %>%
dplyr::select(pg2008, pg2012, pg2016) %>%
describe(quant = c(.25, .75), IQR = TRUE) %>%
mutate(year = c(2008, 2012, 2016)) %>%
relocate(year)
View(ElectionDataEDA)
# Plot of outcome variable 'Total Democratic Votes' by state and year
totalDVotesL <- ElectionData %>%
select(state, vd2008, vd2012, vd2016) %>% group_by(state) %>% summarise('2008' = sum(vd2008, na.rm = TRUE),
'2012' = sum(vd2012, na.rm = TRUE),
'2016' = sum(vd2016, na.rm = TRUE)) %>%
gather(year, tdVotes, c('2008', '2012', '2016'))
# Plot of outcome variable 'Total Democratic Votes' by state and year
totalDVotesL <- ElectionData %>%
dplyr::select(state, vd2008, vd2012, vd2016) %>% group_by(state) %>% summarise('2008' = sum(vd2008, na.rm = TRUE),
'2012' = sum(vd2012, na.rm = TRUE),
'2016' = sum(vd2016, na.rm = TRUE)) %>%
gather(year, tdVotes, c('2008', '2012', '2016'))
View(totalDVotesL)
totalDVotesL <- ElectionData %>%
dplyr::select(state, vd2008, vd2012, vd2016) %>% group_by(state) %>% summarise('2008' = sum(vd2008, na.rm = TRUE),
'2012' = sum(vd2012, na.rm = TRUE),
'2016' = sum(vd2016, na.rm = TRUE))
View(totalDVotesL)
View(totalDVotesL)
ggplot(data = percDVotesL, mapping = aes(x = reorder(factor(state), pdVotes, function(x) -1*sum(x)), y = pdVotes, fill = year)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Percentage Democrat Votes by State & Year") +
scale_x_discrete(name ="Region") +
scale_y_continuous(name = "Percent Democrat Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
# Plot of outcome variable 'Total Democratic Votes' by state and year
percDVotesL <- ElectionDataEDA %>%
select(geograhic.region, pd2008, pd2012, pd2016) %>% group_by(geograhic.region) %>% summarise('2008' = mean(vd2008, na.rm = TRUE),
'2012' = mean(vd2012, na.rm = TRUE),
'2016' = mean(vd2016, na.rm = TRUE)) %>%
gather(year, pdVotes, c('2008', '2012', '2016'))
# Plot of outcome variable 'Total Democratic Votes' by state and year
percDVotesL <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pd2008, pd2012, pd2016) %>% group_by(geograhic.region) %>% summarise('2008' = mean(vd2008, na.rm = TRUE),
'2012' = mean(vd2012, na.rm = TRUE),
'2016' = mean(vd2016, na.rm = TRUE)) %>%
gather(year, pdVotes, c('2008', '2012', '2016'))
# Plot of outcome variable 'Total Democratic Votes' by state and year
percDVotesL <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pd2008, pd2012, pd2016) %>% group_by(geograhic.region) %>% summarise('2008' = mean(pd2008, na.rm = TRUE),
'2012' = mean(pd2012, na.rm = TRUE),
'2016' = mean(pd2016, na.rm = TRUE)) %>%
gather(year, pdVotes, c('2008', '2012', '2016'))
ggplot(data = percDVotesL, mapping = aes(x = reorder(factor(state), pdVotes, function(x) -1*sum(x)), y = pdVotes, fill = year)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Percentage Democrat Votes by State & Year") +
scale_x_discrete(name ="Region") +
scale_y_continuous(name = "Percent Democrat Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
View(percDVotesL)
ggplot(data = percDVotesL, mapping = aes(x = reorder(factor(geograhic.region), pdVotes, function(x) -1*sum(x)), y = pdVotes, fill = year)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Percentage Democrat Votes by State & Year") +
scale_x_discrete(name ="Region") +
scale_y_continuous(name = "Percent Democrat Votes", labels = label_number(suffix = " M", scale = 1e-6)) +
theme_bw()
ggplot(data = percDVotesL, mapping = aes(x = reorder(factor(geograhic.region), pdVotes, function(x) -1*sum(x)), y = pdVotes, fill = year)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Percentage Democrat Votes by State & Year") +
scale_x_discrete(name ="Region") +
scale_y_continuous(name = "Percent Democrat Votes") +
theme_bw()
# Plot of outcome variable 'Total Republican Votes' by state and year
percRVotesL <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pd2008, pd2012, pd2016) %>% group_by(geograhic.region) %>% summarise('2008' = mean(pd2008, na.rm = TRUE),
'2012' = mean(pd2012, na.rm = TRUE),
'2016' = mean(pd2016, na.rm = TRUE)) %>%
gather(year, pgVotes, c('2008', '2012', '2016'))
View(percRVotesL)
?relocate
percRepublicanVotesStatsReg <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>%
describe(quant = c(.25, .75), IQR = TRUE)
View(percRepublicanVotesStatsReg)
percRepublicanVotesStatsReg <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% group_by(geograhic.region) %>%
describe(quant = c(.25, .75), IQR = TRUE)
View(percRepublicanVotesStatsReg)
View(percRepublicanVotesStatsReg)
percRepublicanVotesStatsReg <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% group_by(geograhic.region) %>%
describe(quant = c(.25, .75), IQR = TRUE)
View(percRepublicanVotesStatsReg)
unique(ElectionDataEDA$geograhic.region)
percRepublicanVotesStatsReg <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "South") %>% dplyr::select(-geograhic.region)
View(percRepublicanVotesStatsReg)
percRepublicanVotesStatsReg <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "South") %>% dplyr::select(-geograhic.region) %>%
describe(quant = c(.25, .75), IQR = TRUE)
percRepublicanVotesStatsReg <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "South") %>%
dplyr::select(-geograhic.region) %>% describe(quant = c(.25, .75), IQR = TRUE)
View(percRepublicanVotesStatsReg)
percRepublicanVotesStatsSouth <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "South") %>%
dplyr::select(-geograhic.region) %>% describe(quant = c(.25, .75), IQR = TRUE)
percRepublicanVotesStatsWest <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "West") %>%
dplyr::select(-geograhic.region) %>% describe(quant = c(.25, .75), IQR = TRUE)
percRepublicanVotesStatsNE <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "Northeast") %>%
dplyr::select(-geograhic.region) %>% describe(quant = c(.25, .75), IQR = TRUE)
percRepublicanVotesStatsMid <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "Midwest") %>%
dplyr::select(-geograhic.region) %>% describe(quant = c(.25, .75), IQR = TRUE)
percRepublicanVotesStatReg <- rbind(percRepublicanVotesStatsSouth, percRepublicanVotesStatsWest, percRepublicanVotesStatsNE,
percRepublicanVotesStatsMid)
View(percRepublicanVotesStatReg)
View(percRepublicanVotesStatReg)
percRepublicanVotesStatsSouth <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "South") %>%
dplyr::select(-geograhic.region) %>% describe(quant = c(.25, .75), IQR = TRUE) %>% mutate(vars = "South")
percRepublicanVotesStatsWest <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "West") %>%
dplyr::select(-geograhic.region) %>% describe(quant = c(.25, .75), IQR = TRUE) %>% mutate(vars = "West")
percRepublicanVotesStatsNE <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "Northeast") %>%
dplyr::select(-geograhic.region) %>% describe(quant = c(.25, .75), IQR = TRUE) %>% mutate(vars = "Northeast")
percRepublicanVotesStatsMid <- ElectionDataEDA %>%
dplyr::select(geograhic.region, pg2008, pg2012, pg2016) %>% filter(geograhic.region == "Midwest") %>%
dplyr::select(-geograhic.region) %>% describe(quant = c(.25, .75), IQR = TRUE) %>% mutate(vars = "Midwest")
percRepublicanVotesStatReg <- rbind(percRepublicanVotesStatsSouth, percRepublicanVotesStatsWest, percRepublicanVotesStatsNE,
percRepublicanVotesStatsMid)
View(percRepublicanVotesStatReg)
#devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr) # For map
library(ggplot2)  # For map
devtools::install_github("UrbanInstitute/urbnmapr")
install.packages("devtools")
install.packages("devtools")
library(devtools)
devtools::install_github("UrbanInstitute/urbnmapr")
install.packages("cli")
install.packages("cli")
library(devtools)
remove.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("glue")
install.packages("glue")
remove.packages("glue")
devtools::install_github("UrbanInstitute/urbnmapr")
remove.packages("cli")
devtools::install_github("UrbanInstitute/urbnmapr")
View(percRepublicanVotesStatReg)
